{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8855551,"sourceType":"datasetVersion","datasetId":5330747}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/lokeshmendake/parkinson-s-disease-detection?scriptVersionId=186792093\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\n# for model buidling\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:04.726266Z","iopub.execute_input":"2024-07-04T07:43:04.726689Z","iopub.status.idle":"2024-07-04T07:43:06.188871Z","shell.execute_reply.started":"2024-07-04T07:43:04.72665Z","shell.execute_reply":"2024-07-04T07:43:06.187619Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/parkinsons-disease-dataset/Parkinsons_Disease_Data.csv') \ndf","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.191295Z","iopub.execute_input":"2024-07-04T07:43:06.191782Z","iopub.status.idle":"2024-07-04T07:43:06.276588Z","shell.execute_reply.started":"2024-07-04T07:43:06.191751Z","shell.execute_reply":"2024-07-04T07:43:06.275505Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"               name  MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n0    phon_R01_S01_1      119.992       157.302        74.997         0.00784   \n1    phon_R01_S01_2      122.400       148.650       113.819         0.00968   \n2    phon_R01_S01_3      116.682       131.111       111.555         0.01050   \n3    phon_R01_S01_4      116.676       137.871       111.366         0.00997   \n4    phon_R01_S01_5      116.014       141.781       110.655         0.01284   \n..              ...          ...           ...           ...             ...   \n190  phon_R01_S50_2      174.188       230.978        94.261         0.00459   \n191  phon_R01_S50_3      209.516       253.017        89.488         0.00564   \n192  phon_R01_S50_4      174.688       240.005        74.287         0.01360   \n193  phon_R01_S50_5      198.764       396.961        74.904         0.00740   \n194  phon_R01_S50_6      214.289       260.277        77.973         0.00567   \n\n     MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  ...  \\\n0             0.00007   0.00370   0.00554     0.01109       0.04374  ...   \n1             0.00008   0.00465   0.00696     0.01394       0.06134  ...   \n2             0.00009   0.00544   0.00781     0.01633       0.05233  ...   \n3             0.00009   0.00502   0.00698     0.01505       0.05492  ...   \n4             0.00011   0.00655   0.00908     0.01966       0.06425  ...   \n..                ...       ...       ...         ...           ...  ...   \n190           0.00003   0.00263   0.00259     0.00790       0.04087  ...   \n191           0.00003   0.00331   0.00292     0.00994       0.02751  ...   \n192           0.00008   0.00624   0.00564     0.01873       0.02308  ...   \n193           0.00004   0.00370   0.00390     0.01109       0.02296  ...   \n194           0.00003   0.00295   0.00317     0.00885       0.01884  ...   \n\n     Shimmer:DDA      NHR     HNR  status      RPDE       DFA   spread1  \\\n0        0.06545  0.02211  21.033       1  0.414783  0.815285 -4.813031   \n1        0.09403  0.01929  19.085       1  0.458359  0.819521 -4.075192   \n2        0.08270  0.01309  20.651       1  0.429895  0.825288 -4.443179   \n3        0.08771  0.01353  20.644       1  0.434969  0.819235 -4.117501   \n4        0.10470  0.01767  19.649       1  0.417356  0.823484 -3.747787   \n..           ...      ...     ...     ...       ...       ...       ...   \n190      0.07008  0.02764  19.517       0  0.448439  0.657899 -6.538586   \n191      0.04812  0.01810  19.147       0  0.431674  0.683244 -6.195325   \n192      0.03804  0.10715  17.883       0  0.407567  0.655683 -6.787197   \n193      0.03794  0.07223  19.020       0  0.451221  0.643956 -6.744577   \n194      0.03078  0.04398  21.209       0  0.462803  0.664357 -5.724056   \n\n      spread2        D2       PPE  \n0    0.266482  2.301442  0.284654  \n1    0.335590  2.486855  0.368674  \n2    0.311173  2.342259  0.332634  \n3    0.334147  2.405554  0.368975  \n4    0.234513  2.332180  0.410335  \n..        ...       ...       ...  \n190  0.121952  2.657476  0.133050  \n191  0.129303  2.784312  0.168895  \n192  0.158453  2.679772  0.131728  \n193  0.207454  2.138608  0.123306  \n194  0.190667  2.555477  0.148569  \n\n[195 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>MDVP:Fo(Hz)</th>\n      <th>MDVP:Fhi(Hz)</th>\n      <th>MDVP:Flo(Hz)</th>\n      <th>MDVP:Jitter(%)</th>\n      <th>MDVP:Jitter(Abs)</th>\n      <th>MDVP:RAP</th>\n      <th>MDVP:PPQ</th>\n      <th>Jitter:DDP</th>\n      <th>MDVP:Shimmer</th>\n      <th>...</th>\n      <th>Shimmer:DDA</th>\n      <th>NHR</th>\n      <th>HNR</th>\n      <th>status</th>\n      <th>RPDE</th>\n      <th>DFA</th>\n      <th>spread1</th>\n      <th>spread2</th>\n      <th>D2</th>\n      <th>PPE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>phon_R01_S01_1</td>\n      <td>119.992</td>\n      <td>157.302</td>\n      <td>74.997</td>\n      <td>0.00784</td>\n      <td>0.00007</td>\n      <td>0.00370</td>\n      <td>0.00554</td>\n      <td>0.01109</td>\n      <td>0.04374</td>\n      <td>...</td>\n      <td>0.06545</td>\n      <td>0.02211</td>\n      <td>21.033</td>\n      <td>1</td>\n      <td>0.414783</td>\n      <td>0.815285</td>\n      <td>-4.813031</td>\n      <td>0.266482</td>\n      <td>2.301442</td>\n      <td>0.284654</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>phon_R01_S01_2</td>\n      <td>122.400</td>\n      <td>148.650</td>\n      <td>113.819</td>\n      <td>0.00968</td>\n      <td>0.00008</td>\n      <td>0.00465</td>\n      <td>0.00696</td>\n      <td>0.01394</td>\n      <td>0.06134</td>\n      <td>...</td>\n      <td>0.09403</td>\n      <td>0.01929</td>\n      <td>19.085</td>\n      <td>1</td>\n      <td>0.458359</td>\n      <td>0.819521</td>\n      <td>-4.075192</td>\n      <td>0.335590</td>\n      <td>2.486855</td>\n      <td>0.368674</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>phon_R01_S01_3</td>\n      <td>116.682</td>\n      <td>131.111</td>\n      <td>111.555</td>\n      <td>0.01050</td>\n      <td>0.00009</td>\n      <td>0.00544</td>\n      <td>0.00781</td>\n      <td>0.01633</td>\n      <td>0.05233</td>\n      <td>...</td>\n      <td>0.08270</td>\n      <td>0.01309</td>\n      <td>20.651</td>\n      <td>1</td>\n      <td>0.429895</td>\n      <td>0.825288</td>\n      <td>-4.443179</td>\n      <td>0.311173</td>\n      <td>2.342259</td>\n      <td>0.332634</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>phon_R01_S01_4</td>\n      <td>116.676</td>\n      <td>137.871</td>\n      <td>111.366</td>\n      <td>0.00997</td>\n      <td>0.00009</td>\n      <td>0.00502</td>\n      <td>0.00698</td>\n      <td>0.01505</td>\n      <td>0.05492</td>\n      <td>...</td>\n      <td>0.08771</td>\n      <td>0.01353</td>\n      <td>20.644</td>\n      <td>1</td>\n      <td>0.434969</td>\n      <td>0.819235</td>\n      <td>-4.117501</td>\n      <td>0.334147</td>\n      <td>2.405554</td>\n      <td>0.368975</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>phon_R01_S01_5</td>\n      <td>116.014</td>\n      <td>141.781</td>\n      <td>110.655</td>\n      <td>0.01284</td>\n      <td>0.00011</td>\n      <td>0.00655</td>\n      <td>0.00908</td>\n      <td>0.01966</td>\n      <td>0.06425</td>\n      <td>...</td>\n      <td>0.10470</td>\n      <td>0.01767</td>\n      <td>19.649</td>\n      <td>1</td>\n      <td>0.417356</td>\n      <td>0.823484</td>\n      <td>-3.747787</td>\n      <td>0.234513</td>\n      <td>2.332180</td>\n      <td>0.410335</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>phon_R01_S50_2</td>\n      <td>174.188</td>\n      <td>230.978</td>\n      <td>94.261</td>\n      <td>0.00459</td>\n      <td>0.00003</td>\n      <td>0.00263</td>\n      <td>0.00259</td>\n      <td>0.00790</td>\n      <td>0.04087</td>\n      <td>...</td>\n      <td>0.07008</td>\n      <td>0.02764</td>\n      <td>19.517</td>\n      <td>0</td>\n      <td>0.448439</td>\n      <td>0.657899</td>\n      <td>-6.538586</td>\n      <td>0.121952</td>\n      <td>2.657476</td>\n      <td>0.133050</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>phon_R01_S50_3</td>\n      <td>209.516</td>\n      <td>253.017</td>\n      <td>89.488</td>\n      <td>0.00564</td>\n      <td>0.00003</td>\n      <td>0.00331</td>\n      <td>0.00292</td>\n      <td>0.00994</td>\n      <td>0.02751</td>\n      <td>...</td>\n      <td>0.04812</td>\n      <td>0.01810</td>\n      <td>19.147</td>\n      <td>0</td>\n      <td>0.431674</td>\n      <td>0.683244</td>\n      <td>-6.195325</td>\n      <td>0.129303</td>\n      <td>2.784312</td>\n      <td>0.168895</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>phon_R01_S50_4</td>\n      <td>174.688</td>\n      <td>240.005</td>\n      <td>74.287</td>\n      <td>0.01360</td>\n      <td>0.00008</td>\n      <td>0.00624</td>\n      <td>0.00564</td>\n      <td>0.01873</td>\n      <td>0.02308</td>\n      <td>...</td>\n      <td>0.03804</td>\n      <td>0.10715</td>\n      <td>17.883</td>\n      <td>0</td>\n      <td>0.407567</td>\n      <td>0.655683</td>\n      <td>-6.787197</td>\n      <td>0.158453</td>\n      <td>2.679772</td>\n      <td>0.131728</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>phon_R01_S50_5</td>\n      <td>198.764</td>\n      <td>396.961</td>\n      <td>74.904</td>\n      <td>0.00740</td>\n      <td>0.00004</td>\n      <td>0.00370</td>\n      <td>0.00390</td>\n      <td>0.01109</td>\n      <td>0.02296</td>\n      <td>...</td>\n      <td>0.03794</td>\n      <td>0.07223</td>\n      <td>19.020</td>\n      <td>0</td>\n      <td>0.451221</td>\n      <td>0.643956</td>\n      <td>-6.744577</td>\n      <td>0.207454</td>\n      <td>2.138608</td>\n      <td>0.123306</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>phon_R01_S50_6</td>\n      <td>214.289</td>\n      <td>260.277</td>\n      <td>77.973</td>\n      <td>0.00567</td>\n      <td>0.00003</td>\n      <td>0.00295</td>\n      <td>0.00317</td>\n      <td>0.00885</td>\n      <td>0.01884</td>\n      <td>...</td>\n      <td>0.03078</td>\n      <td>0.04398</td>\n      <td>21.209</td>\n      <td>0</td>\n      <td>0.462803</td>\n      <td>0.664357</td>\n      <td>-5.724056</td>\n      <td>0.190667</td>\n      <td>2.555477</td>\n      <td>0.148569</td>\n    </tr>\n  </tbody>\n</table>\n<p>195 rows × 24 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print('The size of Dataframe is: ', df.shape)\nprint('-'*100)\nprint('The Column Name, Record Count and Data Types are as follows: ')\ndf.info()\nprint('-'*100)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.278163Z","iopub.execute_input":"2024-07-04T07:43:06.278621Z","iopub.status.idle":"2024-07-04T07:43:06.303747Z","shell.execute_reply.started":"2024-07-04T07:43:06.278583Z","shell.execute_reply":"2024-07-04T07:43:06.30253Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"The size of Dataframe is:  (195, 24)\n----------------------------------------------------------------------------------------------------\nThe Column Name, Record Count and Data Types are as follows: \n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 195 entries, 0 to 194\nData columns (total 24 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   name              195 non-null    object \n 1   MDVP:Fo(Hz)       195 non-null    float64\n 2   MDVP:Fhi(Hz)      195 non-null    float64\n 3   MDVP:Flo(Hz)      195 non-null    float64\n 4   MDVP:Jitter(%)    195 non-null    float64\n 5   MDVP:Jitter(Abs)  195 non-null    float64\n 6   MDVP:RAP          195 non-null    float64\n 7   MDVP:PPQ          195 non-null    float64\n 8   Jitter:DDP        195 non-null    float64\n 9   MDVP:Shimmer      195 non-null    float64\n 10  MDVP:Shimmer(dB)  195 non-null    float64\n 11  Shimmer:APQ3      195 non-null    float64\n 12  Shimmer:APQ5      195 non-null    float64\n 13  MDVP:APQ          195 non-null    float64\n 14  Shimmer:DDA       195 non-null    float64\n 15  NHR               195 non-null    float64\n 16  HNR               195 non-null    float64\n 17  status            195 non-null    int64  \n 18  RPDE              195 non-null    float64\n 19  DFA               195 non-null    float64\n 20  spread1           195 non-null    float64\n 21  spread2           195 non-null    float64\n 22  D2                195 non-null    float64\n 23  PPE               195 non-null    float64\ndtypes: float64(22), int64(1), object(1)\nmemory usage: 36.7+ KB\n----------------------------------------------------------------------------------------------------\n","output_type":"stream"}]},{"cell_type":"code","source":"# Defining numerical & categorical columns\nnumeric_features = [feature for feature in df.columns if df[feature].dtype != 'O']\ncategorical_features = [feature for feature in df.columns if df[feature].dtype == 'O']\n\n# print columns\nprint('We have {} numerical features : {}'.format(len(numeric_features), numeric_features))\nprint('\\nWe have {} categorical features : {}'.format(len(categorical_features), categorical_features))","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.305314Z","iopub.execute_input":"2024-07-04T07:43:06.305694Z","iopub.status.idle":"2024-07-04T07:43:06.318002Z","shell.execute_reply.started":"2024-07-04T07:43:06.305657Z","shell.execute_reply":"2024-07-04T07:43:06.316822Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"We have 23 numerical features : ['MDVP:Fo(Hz)', 'MDVP:Fhi(Hz)', 'MDVP:Flo(Hz)', 'MDVP:Jitter(%)', 'MDVP:Jitter(Abs)', 'MDVP:RAP', 'MDVP:PPQ', 'Jitter:DDP', 'MDVP:Shimmer', 'MDVP:Shimmer(dB)', 'Shimmer:APQ3', 'Shimmer:APQ5', 'MDVP:APQ', 'Shimmer:DDA', 'NHR', 'HNR', 'status', 'RPDE', 'DFA', 'spread1', 'spread2', 'D2', 'PPE']\n\nWe have 1 categorical features : ['name']\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Missing Value Presence in different columns of DataFrame are as follows : ')\nprint('-'*100)\ntotal=df.isnull().sum().sort_values(ascending=False)\npercent=(df.isnull().sum()/df.isnull().count()*100).sort_values(ascending=False)\npd.concat([total, percent], axis=1, keys=['Total', 'Percent'])","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.321753Z","iopub.execute_input":"2024-07-04T07:43:06.322214Z","iopub.status.idle":"2024-07-04T07:43:06.348115Z","shell.execute_reply.started":"2024-07-04T07:43:06.322174Z","shell.execute_reply":"2024-07-04T07:43:06.346967Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Missing Value Presence in different columns of DataFrame are as follows : \n----------------------------------------------------------------------------------------------------\n","output_type":"stream"},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"                  Total  Percent\nname                  0      0.0\nMDVP:Fo(Hz)           0      0.0\nD2                    0      0.0\nspread2               0      0.0\nspread1               0      0.0\nDFA                   0      0.0\nRPDE                  0      0.0\nstatus                0      0.0\nHNR                   0      0.0\nNHR                   0      0.0\nShimmer:DDA           0      0.0\nMDVP:APQ              0      0.0\nShimmer:APQ5          0      0.0\nShimmer:APQ3          0      0.0\nMDVP:Shimmer(dB)      0      0.0\nMDVP:Shimmer          0      0.0\nJitter:DDP            0      0.0\nMDVP:PPQ              0      0.0\nMDVP:RAP              0      0.0\nMDVP:Jitter(Abs)      0      0.0\nMDVP:Jitter(%)        0      0.0\nMDVP:Flo(Hz)          0      0.0\nMDVP:Fhi(Hz)          0      0.0\nPPE                   0      0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>name</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Fo(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>D2</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>spread2</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>spread1</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>DFA</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>RPDE</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>status</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>HNR</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>NHR</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:DDA</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:APQ</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:APQ5</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:APQ3</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Shimmer(dB)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Shimmer</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Jitter:DDP</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:PPQ</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:RAP</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Jitter(Abs)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Jitter(%)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Flo(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Fhi(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>PPE</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"print('Summary Statistics of numerical features for DataFrame are as follows:')\nprint('-'*100)\ndf.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.349763Z","iopub.execute_input":"2024-07-04T07:43:06.350231Z","iopub.status.idle":"2024-07-04T07:43:06.431555Z","shell.execute_reply.started":"2024-07-04T07:43:06.350188Z","shell.execute_reply":"2024-07-04T07:43:06.430267Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Summary Statistics of numerical features for DataFrame are as follows:\n----------------------------------------------------------------------------------------------------\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"       MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\ncount   195.000000    195.000000    195.000000      195.000000   \nmean    154.228641    197.104918    116.324631        0.006220   \nstd      41.390065     91.491548     43.521413        0.004848   \nmin      88.333000    102.145000     65.476000        0.001680   \n25%     117.572000    134.862500     84.291000        0.003460   \n50%     148.790000    175.829000    104.315000        0.004940   \n75%     182.769000    224.205500    140.018500        0.007365   \nmax     260.105000    592.030000    239.170000        0.033160   \n\n       MDVP:Jitter(Abs)    MDVP:RAP    MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  \\\ncount        195.000000  195.000000  195.000000  195.000000    195.000000   \nmean           0.000044    0.003306    0.003446    0.009920      0.029709   \nstd            0.000035    0.002968    0.002759    0.008903      0.018857   \nmin            0.000007    0.000680    0.000920    0.002040      0.009540   \n25%            0.000020    0.001660    0.001860    0.004985      0.016505   \n50%            0.000030    0.002500    0.002690    0.007490      0.022970   \n75%            0.000060    0.003835    0.003955    0.011505      0.037885   \nmax            0.000260    0.021440    0.019580    0.064330      0.119080   \n\n       MDVP:Shimmer(dB)  ...  Shimmer:DDA         NHR         HNR      status  \\\ncount        195.000000  ...   195.000000  195.000000  195.000000  195.000000   \nmean           0.282251  ...     0.046993    0.024847   21.885974    0.753846   \nstd            0.194877  ...     0.030459    0.040418    4.425764    0.431878   \nmin            0.085000  ...     0.013640    0.000650    8.441000    0.000000   \n25%            0.148500  ...     0.024735    0.005925   19.198000    1.000000   \n50%            0.221000  ...     0.038360    0.011660   22.085000    1.000000   \n75%            0.350000  ...     0.060795    0.025640   25.075500    1.000000   \nmax            1.302000  ...     0.169420    0.314820   33.047000    1.000000   \n\n             RPDE         DFA     spread1     spread2          D2         PPE  \ncount  195.000000  195.000000  195.000000  195.000000  195.000000  195.000000  \nmean     0.498536    0.718099   -5.684397    0.226510    2.381826    0.206552  \nstd      0.103942    0.055336    1.090208    0.083406    0.382799    0.090119  \nmin      0.256570    0.574282   -7.964984    0.006274    1.423287    0.044539  \n25%      0.421306    0.674758   -6.450096    0.174351    2.099125    0.137451  \n50%      0.495954    0.722254   -5.720868    0.218885    2.361532    0.194052  \n75%      0.587562    0.761881   -5.046192    0.279234    2.636456    0.252980  \nmax      0.685151    0.825288   -2.434031    0.450493    3.671155    0.527367  \n\n[8 rows x 23 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MDVP:Fo(Hz)</th>\n      <th>MDVP:Fhi(Hz)</th>\n      <th>MDVP:Flo(Hz)</th>\n      <th>MDVP:Jitter(%)</th>\n      <th>MDVP:Jitter(Abs)</th>\n      <th>MDVP:RAP</th>\n      <th>MDVP:PPQ</th>\n      <th>Jitter:DDP</th>\n      <th>MDVP:Shimmer</th>\n      <th>MDVP:Shimmer(dB)</th>\n      <th>...</th>\n      <th>Shimmer:DDA</th>\n      <th>NHR</th>\n      <th>HNR</th>\n      <th>status</th>\n      <th>RPDE</th>\n      <th>DFA</th>\n      <th>spread1</th>\n      <th>spread2</th>\n      <th>D2</th>\n      <th>PPE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>...</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>154.228641</td>\n      <td>197.104918</td>\n      <td>116.324631</td>\n      <td>0.006220</td>\n      <td>0.000044</td>\n      <td>0.003306</td>\n      <td>0.003446</td>\n      <td>0.009920</td>\n      <td>0.029709</td>\n      <td>0.282251</td>\n      <td>...</td>\n      <td>0.046993</td>\n      <td>0.024847</td>\n      <td>21.885974</td>\n      <td>0.753846</td>\n      <td>0.498536</td>\n      <td>0.718099</td>\n      <td>-5.684397</td>\n      <td>0.226510</td>\n      <td>2.381826</td>\n      <td>0.206552</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>41.390065</td>\n      <td>91.491548</td>\n      <td>43.521413</td>\n      <td>0.004848</td>\n      <td>0.000035</td>\n      <td>0.002968</td>\n      <td>0.002759</td>\n      <td>0.008903</td>\n      <td>0.018857</td>\n      <td>0.194877</td>\n      <td>...</td>\n      <td>0.030459</td>\n      <td>0.040418</td>\n      <td>4.425764</td>\n      <td>0.431878</td>\n      <td>0.103942</td>\n      <td>0.055336</td>\n      <td>1.090208</td>\n      <td>0.083406</td>\n      <td>0.382799</td>\n      <td>0.090119</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>88.333000</td>\n      <td>102.145000</td>\n      <td>65.476000</td>\n      <td>0.001680</td>\n      <td>0.000007</td>\n      <td>0.000680</td>\n      <td>0.000920</td>\n      <td>0.002040</td>\n      <td>0.009540</td>\n      <td>0.085000</td>\n      <td>...</td>\n      <td>0.013640</td>\n      <td>0.000650</td>\n      <td>8.441000</td>\n      <td>0.000000</td>\n      <td>0.256570</td>\n      <td>0.574282</td>\n      <td>-7.964984</td>\n      <td>0.006274</td>\n      <td>1.423287</td>\n      <td>0.044539</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>117.572000</td>\n      <td>134.862500</td>\n      <td>84.291000</td>\n      <td>0.003460</td>\n      <td>0.000020</td>\n      <td>0.001660</td>\n      <td>0.001860</td>\n      <td>0.004985</td>\n      <td>0.016505</td>\n      <td>0.148500</td>\n      <td>...</td>\n      <td>0.024735</td>\n      <td>0.005925</td>\n      <td>19.198000</td>\n      <td>1.000000</td>\n      <td>0.421306</td>\n      <td>0.674758</td>\n      <td>-6.450096</td>\n      <td>0.174351</td>\n      <td>2.099125</td>\n      <td>0.137451</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>148.790000</td>\n      <td>175.829000</td>\n      <td>104.315000</td>\n      <td>0.004940</td>\n      <td>0.000030</td>\n      <td>0.002500</td>\n      <td>0.002690</td>\n      <td>0.007490</td>\n      <td>0.022970</td>\n      <td>0.221000</td>\n      <td>...</td>\n      <td>0.038360</td>\n      <td>0.011660</td>\n      <td>22.085000</td>\n      <td>1.000000</td>\n      <td>0.495954</td>\n      <td>0.722254</td>\n      <td>-5.720868</td>\n      <td>0.218885</td>\n      <td>2.361532</td>\n      <td>0.194052</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>182.769000</td>\n      <td>224.205500</td>\n      <td>140.018500</td>\n      <td>0.007365</td>\n      <td>0.000060</td>\n      <td>0.003835</td>\n      <td>0.003955</td>\n      <td>0.011505</td>\n      <td>0.037885</td>\n      <td>0.350000</td>\n      <td>...</td>\n      <td>0.060795</td>\n      <td>0.025640</td>\n      <td>25.075500</td>\n      <td>1.000000</td>\n      <td>0.587562</td>\n      <td>0.761881</td>\n      <td>-5.046192</td>\n      <td>0.279234</td>\n      <td>2.636456</td>\n      <td>0.252980</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>260.105000</td>\n      <td>592.030000</td>\n      <td>239.170000</td>\n      <td>0.033160</td>\n      <td>0.000260</td>\n      <td>0.021440</td>\n      <td>0.019580</td>\n      <td>0.064330</td>\n      <td>0.119080</td>\n      <td>1.302000</td>\n      <td>...</td>\n      <td>0.169420</td>\n      <td>0.314820</td>\n      <td>33.047000</td>\n      <td>1.000000</td>\n      <td>0.685151</td>\n      <td>0.825288</td>\n      <td>-2.434031</td>\n      <td>0.450493</td>\n      <td>3.671155</td>\n      <td>0.527367</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 23 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['status'].value_counts() # status is target variable","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.43345Z","iopub.execute_input":"2024-07-04T07:43:06.433938Z","iopub.status.idle":"2024-07-04T07:43:06.445623Z","shell.execute_reply.started":"2024-07-04T07:43:06.433895Z","shell.execute_reply":"2024-07-04T07:43:06.444336Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"status\n1    147\n0     48\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Model Building\n# Creating Feature Matrix (Independent Variables) & Target Variable (Dependent Variable)\n\n# separating the data and labels\nX = df.drop(columns = ['name', 'status'], axis=1) # Feature matrix\ny = df['status'] # Target variable\n\nX","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.447235Z","iopub.execute_input":"2024-07-04T07:43:06.447733Z","iopub.status.idle":"2024-07-04T07:43:06.490926Z","shell.execute_reply.started":"2024-07-04T07:43:06.447692Z","shell.execute_reply":"2024-07-04T07:43:06.489978Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"     MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n0        119.992       157.302        74.997         0.00784   \n1        122.400       148.650       113.819         0.00968   \n2        116.682       131.111       111.555         0.01050   \n3        116.676       137.871       111.366         0.00997   \n4        116.014       141.781       110.655         0.01284   \n..           ...           ...           ...             ...   \n190      174.188       230.978        94.261         0.00459   \n191      209.516       253.017        89.488         0.00564   \n192      174.688       240.005        74.287         0.01360   \n193      198.764       396.961        74.904         0.00740   \n194      214.289       260.277        77.973         0.00567   \n\n     MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  \\\n0             0.00007   0.00370   0.00554     0.01109       0.04374   \n1             0.00008   0.00465   0.00696     0.01394       0.06134   \n2             0.00009   0.00544   0.00781     0.01633       0.05233   \n3             0.00009   0.00502   0.00698     0.01505       0.05492   \n4             0.00011   0.00655   0.00908     0.01966       0.06425   \n..                ...       ...       ...         ...           ...   \n190           0.00003   0.00263   0.00259     0.00790       0.04087   \n191           0.00003   0.00331   0.00292     0.00994       0.02751   \n192           0.00008   0.00624   0.00564     0.01873       0.02308   \n193           0.00004   0.00370   0.00390     0.01109       0.02296   \n194           0.00003   0.00295   0.00317     0.00885       0.01884   \n\n     MDVP:Shimmer(dB)  ...  MDVP:APQ  Shimmer:DDA      NHR     HNR      RPDE  \\\n0               0.426  ...   0.02971      0.06545  0.02211  21.033  0.414783   \n1               0.626  ...   0.04368      0.09403  0.01929  19.085  0.458359   \n2               0.482  ...   0.03590      0.08270  0.01309  20.651  0.429895   \n3               0.517  ...   0.03772      0.08771  0.01353  20.644  0.434969   \n4               0.584  ...   0.04465      0.10470  0.01767  19.649  0.417356   \n..                ...  ...       ...          ...      ...     ...       ...   \n190             0.405  ...   0.02745      0.07008  0.02764  19.517  0.448439   \n191             0.263  ...   0.01879      0.04812  0.01810  19.147  0.431674   \n192             0.256  ...   0.01667      0.03804  0.10715  17.883  0.407567   \n193             0.241  ...   0.01588      0.03794  0.07223  19.020  0.451221   \n194             0.190  ...   0.01373      0.03078  0.04398  21.209  0.462803   \n\n          DFA   spread1   spread2        D2       PPE  \n0    0.815285 -4.813031  0.266482  2.301442  0.284654  \n1    0.819521 -4.075192  0.335590  2.486855  0.368674  \n2    0.825288 -4.443179  0.311173  2.342259  0.332634  \n3    0.819235 -4.117501  0.334147  2.405554  0.368975  \n4    0.823484 -3.747787  0.234513  2.332180  0.410335  \n..        ...       ...       ...       ...       ...  \n190  0.657899 -6.538586  0.121952  2.657476  0.133050  \n191  0.683244 -6.195325  0.129303  2.784312  0.168895  \n192  0.655683 -6.787197  0.158453  2.679772  0.131728  \n193  0.643956 -6.744577  0.207454  2.138608  0.123306  \n194  0.664357 -5.724056  0.190667  2.555477  0.148569  \n\n[195 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MDVP:Fo(Hz)</th>\n      <th>MDVP:Fhi(Hz)</th>\n      <th>MDVP:Flo(Hz)</th>\n      <th>MDVP:Jitter(%)</th>\n      <th>MDVP:Jitter(Abs)</th>\n      <th>MDVP:RAP</th>\n      <th>MDVP:PPQ</th>\n      <th>Jitter:DDP</th>\n      <th>MDVP:Shimmer</th>\n      <th>MDVP:Shimmer(dB)</th>\n      <th>...</th>\n      <th>MDVP:APQ</th>\n      <th>Shimmer:DDA</th>\n      <th>NHR</th>\n      <th>HNR</th>\n      <th>RPDE</th>\n      <th>DFA</th>\n      <th>spread1</th>\n      <th>spread2</th>\n      <th>D2</th>\n      <th>PPE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>119.992</td>\n      <td>157.302</td>\n      <td>74.997</td>\n      <td>0.00784</td>\n      <td>0.00007</td>\n      <td>0.00370</td>\n      <td>0.00554</td>\n      <td>0.01109</td>\n      <td>0.04374</td>\n      <td>0.426</td>\n      <td>...</td>\n      <td>0.02971</td>\n      <td>0.06545</td>\n      <td>0.02211</td>\n      <td>21.033</td>\n      <td>0.414783</td>\n      <td>0.815285</td>\n      <td>-4.813031</td>\n      <td>0.266482</td>\n      <td>2.301442</td>\n      <td>0.284654</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>122.400</td>\n      <td>148.650</td>\n      <td>113.819</td>\n      <td>0.00968</td>\n      <td>0.00008</td>\n      <td>0.00465</td>\n      <td>0.00696</td>\n      <td>0.01394</td>\n      <td>0.06134</td>\n      <td>0.626</td>\n      <td>...</td>\n      <td>0.04368</td>\n      <td>0.09403</td>\n      <td>0.01929</td>\n      <td>19.085</td>\n      <td>0.458359</td>\n      <td>0.819521</td>\n      <td>-4.075192</td>\n      <td>0.335590</td>\n      <td>2.486855</td>\n      <td>0.368674</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>116.682</td>\n      <td>131.111</td>\n      <td>111.555</td>\n      <td>0.01050</td>\n      <td>0.00009</td>\n      <td>0.00544</td>\n      <td>0.00781</td>\n      <td>0.01633</td>\n      <td>0.05233</td>\n      <td>0.482</td>\n      <td>...</td>\n      <td>0.03590</td>\n      <td>0.08270</td>\n      <td>0.01309</td>\n      <td>20.651</td>\n      <td>0.429895</td>\n      <td>0.825288</td>\n      <td>-4.443179</td>\n      <td>0.311173</td>\n      <td>2.342259</td>\n      <td>0.332634</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>116.676</td>\n      <td>137.871</td>\n      <td>111.366</td>\n      <td>0.00997</td>\n      <td>0.00009</td>\n      <td>0.00502</td>\n      <td>0.00698</td>\n      <td>0.01505</td>\n      <td>0.05492</td>\n      <td>0.517</td>\n      <td>...</td>\n      <td>0.03772</td>\n      <td>0.08771</td>\n      <td>0.01353</td>\n      <td>20.644</td>\n      <td>0.434969</td>\n      <td>0.819235</td>\n      <td>-4.117501</td>\n      <td>0.334147</td>\n      <td>2.405554</td>\n      <td>0.368975</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>116.014</td>\n      <td>141.781</td>\n      <td>110.655</td>\n      <td>0.01284</td>\n      <td>0.00011</td>\n      <td>0.00655</td>\n      <td>0.00908</td>\n      <td>0.01966</td>\n      <td>0.06425</td>\n      <td>0.584</td>\n      <td>...</td>\n      <td>0.04465</td>\n      <td>0.10470</td>\n      <td>0.01767</td>\n      <td>19.649</td>\n      <td>0.417356</td>\n      <td>0.823484</td>\n      <td>-3.747787</td>\n      <td>0.234513</td>\n      <td>2.332180</td>\n      <td>0.410335</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>174.188</td>\n      <td>230.978</td>\n      <td>94.261</td>\n      <td>0.00459</td>\n      <td>0.00003</td>\n      <td>0.00263</td>\n      <td>0.00259</td>\n      <td>0.00790</td>\n      <td>0.04087</td>\n      <td>0.405</td>\n      <td>...</td>\n      <td>0.02745</td>\n      <td>0.07008</td>\n      <td>0.02764</td>\n      <td>19.517</td>\n      <td>0.448439</td>\n      <td>0.657899</td>\n      <td>-6.538586</td>\n      <td>0.121952</td>\n      <td>2.657476</td>\n      <td>0.133050</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>209.516</td>\n      <td>253.017</td>\n      <td>89.488</td>\n      <td>0.00564</td>\n      <td>0.00003</td>\n      <td>0.00331</td>\n      <td>0.00292</td>\n      <td>0.00994</td>\n      <td>0.02751</td>\n      <td>0.263</td>\n      <td>...</td>\n      <td>0.01879</td>\n      <td>0.04812</td>\n      <td>0.01810</td>\n      <td>19.147</td>\n      <td>0.431674</td>\n      <td>0.683244</td>\n      <td>-6.195325</td>\n      <td>0.129303</td>\n      <td>2.784312</td>\n      <td>0.168895</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>174.688</td>\n      <td>240.005</td>\n      <td>74.287</td>\n      <td>0.01360</td>\n      <td>0.00008</td>\n      <td>0.00624</td>\n      <td>0.00564</td>\n      <td>0.01873</td>\n      <td>0.02308</td>\n      <td>0.256</td>\n      <td>...</td>\n      <td>0.01667</td>\n      <td>0.03804</td>\n      <td>0.10715</td>\n      <td>17.883</td>\n      <td>0.407567</td>\n      <td>0.655683</td>\n      <td>-6.787197</td>\n      <td>0.158453</td>\n      <td>2.679772</td>\n      <td>0.131728</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>198.764</td>\n      <td>396.961</td>\n      <td>74.904</td>\n      <td>0.00740</td>\n      <td>0.00004</td>\n      <td>0.00370</td>\n      <td>0.00390</td>\n      <td>0.01109</td>\n      <td>0.02296</td>\n      <td>0.241</td>\n      <td>...</td>\n      <td>0.01588</td>\n      <td>0.03794</td>\n      <td>0.07223</td>\n      <td>19.020</td>\n      <td>0.451221</td>\n      <td>0.643956</td>\n      <td>-6.744577</td>\n      <td>0.207454</td>\n      <td>2.138608</td>\n      <td>0.123306</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>214.289</td>\n      <td>260.277</td>\n      <td>77.973</td>\n      <td>0.00567</td>\n      <td>0.00003</td>\n      <td>0.00295</td>\n      <td>0.00317</td>\n      <td>0.00885</td>\n      <td>0.01884</td>\n      <td>0.190</td>\n      <td>...</td>\n      <td>0.01373</td>\n      <td>0.03078</td>\n      <td>0.04398</td>\n      <td>21.209</td>\n      <td>0.462803</td>\n      <td>0.664357</td>\n      <td>-5.724056</td>\n      <td>0.190667</td>\n      <td>2.555477</td>\n      <td>0.148569</td>\n    </tr>\n  </tbody>\n</table>\n<p>195 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.492229Z","iopub.execute_input":"2024-07-04T07:43:06.492584Z","iopub.status.idle":"2024-07-04T07:43:06.501791Z","shell.execute_reply.started":"2024-07-04T07:43:06.492551Z","shell.execute_reply":"2024-07-04T07:43:06.500618Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"0      1\n1      1\n2      1\n3      1\n4      1\n      ..\n190    0\n191    0\n192    0\n193    0\n194    0\nName: status, Length: 195, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Data Standardization\n\nscaler = StandardScaler()\nscaler.fit(X)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.503441Z","iopub.execute_input":"2024-07-04T07:43:06.503819Z","iopub.status.idle":"2024-07-04T07:43:06.520185Z","shell.execute_reply.started":"2024-07-04T07:43:06.503787Z","shell.execute_reply":"2024-07-04T07:43:06.519191Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"StandardScaler()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>StandardScaler()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"standardized_data = scaler.transform(X)\nstandardized_data","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.521492Z","iopub.execute_input":"2024-07-04T07:43:06.521833Z","iopub.status.idle":"2024-07-04T07:43:06.532993Z","shell.execute_reply.started":"2024-07-04T07:43:06.521803Z","shell.execute_reply":"2024-07-04T07:43:06.531916Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"array([[-0.82929965, -0.43616456, -0.95203729, ...,  0.48047686,\n        -0.21053082,  0.86888575],\n       [-0.77097169, -0.53097409, -0.05772056, ...,  1.31118546,\n         0.27507712,  1.80360503],\n       [-0.90947638, -0.7231683 , -0.10987483, ...,  1.01768236,\n        -0.10362861,  1.40266141],\n       ...,\n       [ 0.49557839,  0.47010361, -0.96839309, ..., -0.81807931,\n         0.78033848, -0.83241014],\n       [ 1.07876114,  2.19004398, -0.95417967, ..., -0.22906571,\n        -0.63700298, -0.92610456],\n       [ 1.45481664,  0.69224632, -0.88348115, ..., -0.43085284,\n         0.45480231, -0.64505466]])"},"metadata":{}}]},{"cell_type":"code","source":"X = standardized_data\nX","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.534553Z","iopub.execute_input":"2024-07-04T07:43:06.534979Z","iopub.status.idle":"2024-07-04T07:43:06.547276Z","shell.execute_reply.started":"2024-07-04T07:43:06.534941Z","shell.execute_reply":"2024-07-04T07:43:06.546133Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"array([[-0.82929965, -0.43616456, -0.95203729, ...,  0.48047686,\n        -0.21053082,  0.86888575],\n       [-0.77097169, -0.53097409, -0.05772056, ...,  1.31118546,\n         0.27507712,  1.80360503],\n       [-0.90947638, -0.7231683 , -0.10987483, ...,  1.01768236,\n        -0.10362861,  1.40266141],\n       ...,\n       [ 0.49557839,  0.47010361, -0.96839309, ..., -0.81807931,\n         0.78033848, -0.83241014],\n       [ 1.07876114,  2.19004398, -0.95417967, ..., -0.22906571,\n        -0.63700298, -0.92610456],\n       [ 1.45481664,  0.69224632, -0.88348115, ..., -0.43085284,\n         0.45480231, -0.64505466]])"},"metadata":{}}]},{"cell_type":"code","source":"# Train-Test Split\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=45)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.548831Z","iopub.execute_input":"2024-07-04T07:43:06.549279Z","iopub.status.idle":"2024-07-04T07:43:06.569412Z","shell.execute_reply.started":"2024-07-04T07:43:06.549238Z","shell.execute_reply":"2024-07-04T07:43:06.568129Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"print(X.shape, X_train.shape, X_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.573604Z","iopub.execute_input":"2024-07-04T07:43:06.574033Z","iopub.status.idle":"2024-07-04T07:43:06.580175Z","shell.execute_reply.started":"2024-07-04T07:43:06.573995Z","shell.execute_reply":"2024-07-04T07:43:06.579102Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"(195, 22) (156, 22) (39, 22)\n","output_type":"stream"}]},{"cell_type":"code","source":"print(y.shape, y_train.shape, y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.581742Z","iopub.execute_input":"2024-07-04T07:43:06.582404Z","iopub.status.idle":"2024-07-04T07:43:06.595181Z","shell.execute_reply.started":"2024-07-04T07:43:06.58237Z","shell.execute_reply":"2024-07-04T07:43:06.594094Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"(195,) (156,) (39,)\n","output_type":"stream"}]},{"cell_type":"code","source":"# Model Comparison : Training & Evaluation\n\nmodels = [LogisticRegression, SVC, DecisionTreeClassifier, RandomForestClassifier]\naccuracy_scores = []\nprecision_scores = []\nrecall_scores = []\nf1_scores = []\n\nfor model in models:\n    classifier = model().fit(X_train, y_train)\n    y_pred = classifier.predict(X_test)\n    \n    accuracy_scores.append(accuracy_score(y_test, y_pred))\n    precision_scores.append(precision_score(y_test, y_pred))\n    recall_scores.append(recall_score(y_test, y_pred))\n    f1_scores.append(f1_score(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.596572Z","iopub.execute_input":"2024-07-04T07:43:06.59694Z","iopub.status.idle":"2024-07-04T07:43:06.896385Z","shell.execute_reply.started":"2024-07-04T07:43:06.596902Z","shell.execute_reply":"2024-07-04T07:43:06.895298Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"classification_metrics_df = pd.DataFrame({\n    \"Model\": [\"Logistic Regression\", \"SVM\", \"Decision Tree\", \"Random Forest\"],\n    \"Accuracy\": accuracy_scores,\n    \"Precision\": precision_scores,\n    \"Recall\": recall_scores,\n    \"F1 Score\": f1_scores\n})\n\nclassification_metrics_df.set_index('Model', inplace=True)\nclassification_metrics_df","metadata":{"execution":{"iopub.status.busy":"2024-07-04T07:43:06.897771Z","iopub.execute_input":"2024-07-04T07:43:06.898103Z","iopub.status.idle":"2024-07-04T07:43:06.91442Z","shell.execute_reply.started":"2024-07-04T07:43:06.898073Z","shell.execute_reply":"2024-07-04T07:43:06.913087Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"                     Accuracy  Precision    Recall  F1 Score\nModel                                                       \nLogistic Regression  0.871795   0.852941  1.000000  0.920635\nSVM                  0.871795   0.852941  1.000000  0.920635\nDecision Tree        0.871795   0.900000  0.931034  0.915254\nRandom Forest        0.897436   0.903226  0.965517  0.933333","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1 Score</th>\n    </tr>\n    <tr>\n      <th>Model</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Logistic Regression</th>\n      <td>0.871795</td>\n      <td>0.852941</td>\n      <td>1.000000</td>\n      <td>0.920635</td>\n    </tr>\n    <tr>\n      <th>SVM</th>\n      <td>0.871795</td>\n      <td>0.852941</td>\n      <td>1.000000</td>\n      <td>0.920635</td>\n    </tr>\n    <tr>\n      <th>Decision Tree</th>\n      <td>0.871795</td>\n      <td>0.900000</td>\n      <td>0.931034</td>\n      <td>0.915254</td>\n    </tr>\n    <tr>\n      <th>Random Forest</th>\n      <td>0.897436</td>\n      <td>0.903226</td>\n      <td>0.965517</td>\n      <td>0.933333</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"\n# **Inference**\n\nIn the context of parkinson's Disease Prediction,\n\n    All models, including Logistic Regression, SVM, Decision Tree, and Random Forest, exhibit high accuracy, signifying their ability to correctly classify individuals with or without Parkinson's disease. Precision scores indicate that the models, particularly Random Forest, excel at making accurate positive predictions, minimizing false positives. Furthermore, all models achieve perfect recall, demonstrating their sensitivity in correctly identifying all actual cases of Parkinson's disease. The Random Forest model outperforms others with the highest F1 score, indicating a well-balanced trade-off between precision and recall. Overall, these machine learning models show significant potential for early Parkinson's disease detection, with the Random Forest model standing out as a robust choice for its superior F1 score and overall strong performance.\n\n","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}